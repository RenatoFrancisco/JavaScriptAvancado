{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbName","connection","close","constructor","Error","getConnection","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement","closeConnection"],"mappings":";AACA,IAAIA,oBAAqB,YAAW;;AAEhC,UAAMC,SAAS,CAAC,aAAD,CAAf;AACA,UAAMC,UAAU,CAAhB;AACA,UAAMC,SAAS,YAAf;;AAEA,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAQ,IAAZ;;AAEA,WAAO,MAAML,iBAAN,CAAwB;;AAEvBM,sBAAc;;AAEV,kBAAMC,MAAM,wDAAN,CAAN;AACH;;AAED,eAAOC,aAAP,GAAuB;;AAEnB,mBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEpC,oBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBZ,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAU,4BAAYI,eAAZ,GAA8BC,KAAK;;AAE/BjB,sCAAkBkB,aAAlB,CAAgCD,EAAEE,MAAF,CAASC,MAAzC;AACH,iBAHD;;AAKAR,4BAAYS,SAAZ,GAAwBJ,KAAM;;AAE1B,wBAAI,CAACb,UAAL,EAAiB;;AAEbA,qCAAaa,EAAEE,MAAF,CAASC,MAAtB;AACAf,gCAAQD,WAAWC,KAAX,CAAiBiB,IAAjB,CAAsBlB,UAAtB,CAAR;AACAA,mCAAWC,KAAX,GAAmB,YAAW;AAC1B,kCAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACH,yBAFD;AAGH;;AAEDG,4BAAQN,UAAR;AACH,iBAZD;;AAcAQ,4BAAYW,OAAZ,GAAsBN,KAAK;;AAEvBO,4BAAQC,GAAR,CAAYR,EAAEE,MAAF,CAASO,KAArB;;AAEAf,2BAAOM,EAAEE,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACH,iBALD;AAMH,aA7BM,CAAP;AA8BH;;AAED,eAAOT,aAAP,CAAqBd,UAArB,EAAiC;;AAE7BH,mBAAO2B,OAAP,CAAeC,SAAS;;AAEpB,oBAAIzB,WAAW0B,gBAAX,CAA4BC,QAA5B,CAAqCF,KAArC,CAAJ,EACIzB,WAAW4B,iBAAX,CAA6BH,KAA7B;;AAEJzB,2BAAW6B,iBAAX,CAA6BJ,KAA7B,EAAoC,EAAEK,eAAe,IAAjB,EAApC;AACH,aAND;AAOH;;AAED,eAAOC,eAAP,GAAyB;;AAErB,gBAAI/B,UAAJ,EAAgB;;AAEZC;AACAD,6BAAa,IAAb;AACH;AACJ;AA3DsB,KAA/B;AA6DH,CAtEuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["\r\nvar ConnectionFactory = (function() {\r\n\r\n    const stores = ['negociacoes'];\r\n    const version = 4;\r\n    const dbName = 'aluraframe';\r\n\r\n    var connection = null;\r\n    var close = null;\r\n\r\n    return class ConnectionFactory {\r\n    \r\n            constructor() {\r\n        \r\n                throw Error('Não é permitido criar instâncias de ConnectionFactory.')\r\n            }\r\n        \r\n            static getConnection() {\r\n        \r\n                return new Promise((resolve, reject) => {\r\n        \r\n                    let openRequest = window.indexedDB.open(dbName, version);\r\n        \r\n                    openRequest.onupgradeneeded = e => {\r\n        \r\n                        ConnectionFactory._createStores(e.target.result);\r\n                    };\r\n        \r\n                    openRequest.onsuccess = e =>  {\r\n                        \r\n                        if (!connection) {\r\n\r\n                            connection = e.target.result;\r\n                            close = connection.close.bind(connection);\r\n                            connection.close = function() {\r\n                                throw new Error(\"Não é permitido fechar a conexão diretamente.\");\r\n                            };\r\n                        }\r\n\r\n                        resolve(connection);\r\n                    };\r\n        \r\n                    openRequest.onerror = e => {\r\n        \r\n                        console.log(e.target.error);\r\n        \r\n                        reject(e.target.error.name);\r\n                    };\r\n                });\r\n            }\r\n        \r\n            static _createStores(connection) {\r\n        \r\n                stores.forEach(store => {\r\n        \r\n                    if (connection.objectStoreNames.contains(store))\r\n                        connection.deleteObjectStore(store);\r\n                    \r\n                    connection.createObjectStore(store, { autoIncrement: true });\r\n                });\r\n            }\r\n\r\n            static closeConnection() {\r\n\r\n                if (connection) {\r\n\r\n                    close();\r\n                    connection = null;\r\n                }\r\n            }\r\n        }\r\n})();\r\n\r\n\r\n"]}